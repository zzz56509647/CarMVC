@{
    ViewData["Title"] = "LoginUser";
}
<h1>百车汇租赁系统登录</h1>

<table class="table ">
    <tr>
        <td>用户姓名</td>
        <td>
            <input id="name" type="text" />
        </td>

    </tr>
    <tr>
        <td>用户密码</td>
        <td>
            <input id="pass" type="password" />
        </td>
    </tr>
    <tr>
        <td>邮箱</td>
        <td>
            <input id="mail" type="text" />
        </td>
    </tr>
    <tr>
        <td>验证码</td>
        <td>
            <input id="core" type="text" />
            <input id="Button1" type="button" value="获取验证码" onclick="CreateCore()" />
        </td>
    </tr>
    <tr>
        <td></td>
        <td>
            <input id="Submit1" type="submit" value="登录" onclick="show()" />
        </td>
    </tr>

</table>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script>

    function show() {
        CreateCore();
        var obj = {};
        obj.Name = $("#name").val();
        obj.Pwd = $("#pass").val();
        var core = $("#core").val();
        $.ajax({
            url: 'http://localhost:57894/api/user/LoginUser/',
            type: 'post',
            dataType: 'json',
            data: obj,
            //async: true,
            contentType: false,//实体头部用于指示资源的MIME类型 media type 。这里要为false
            processData: false,//processData 默认为true，当设置为true的时候,jquery ajax 提交的时候不会序列化 data，而是直接使用data
            success: function (d) {
                if (core) {
                    alert("登录成功！");
                    location.href = '/Admin/OrderShow';
                }
                else {
                    alert("登录失败！");
                }
            }
        })
    }
    function CreateCore() {
        var Email = $("#mail").val();
        $.ajax({
            url: 'http://localhost:57894/api/user/SendMailMessage?Email=' + Email,
            type: 'get',
            dataType: 'json',
            //async: true,
            contentType: false,//实体头部用于指示资源的MIME类型 media type 。这里要为false
            processData: false,//processData 默认为true，当设置为true的时候,jquery ajax 提交的时候不会序列化 data，而是直接使用data
            success: function (d) {
                alert(d);
            }
        })
    }
</script>